/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1806                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(   
        ( 0    0    0  )    // vertex number 0
        ( 1    0    0.1)    // vertex number 1
        ( 1.1  1    0.1)    // vertex number 2
        ( 0    1    0.1)    // vertex number 3
        (-0.1 -0.1  1  )    // vertex number 4
        ( 1.3  0    1.2)    // vertex number 5
        ( 1.4  1.1  1.3)    // vertex number 6
        ( 0    1    1.1)    // vertex number 7
);

edges
(
     arc 1 5 (1.1 0.0 0.5)
);

blocks
(
     // hex (0 1 2 3 4 5 6 7)
     hex (0 1 2 3 4 5 5 4) // Colapsing vertices 6 -> 5 and 7->4
     (10 1 10) 
     simpleGrading (1 1 1)
);

boundary               // keyword
    (
        inlet              // patch name
        {
            type patch;    // patch type for patch 0
            faces
            (
                (0 4 4 3)  // block face in this patch
            );
        }                  // end of 0th patch definition

        outlet             // patch name
        {
            type patch;    // patch type for patch 1
            faces
            (
                (1 2 5 5)
            );
        }

        walls
        {
            type wall;
            faces
            (
                (0 1 5 4)
                (0 3 2 1)
                (3 4 5 2)
                // (4 5 6 7)
                // (4 5 5 4) // Update the phase of the collapsed vertex
            );
        }

        wedge
        {
            type   empty;
            faces
            (
                (4 5 5 4) // Update the phase of the collapsed vertex
            );
        }
    );
    

//patches
//(
//    patch inlet
//    (
        // (1 5 4 0)
//    )
//    patch outlet
//    (
//        (3 7 6 2)
//    )
//    wall walls
//    (
//       (0 4 7 3)
//        (2 6 5 1)
//        (1 5 4 0)
//    )
//);

mergePatchPairs
(
);

// ************************************************************************* //
